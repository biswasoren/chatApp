{"ast":null,"code":"var _jsxFileName = \"/Users/biswasoren/personal_projects/chatApp/src/components/box.js\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport './box.css';\nimport { socket } from './socket';\n\nclass Box extends React.Component {\n  // static propTypes = {\n  //   height: PropTypes.string.isRequired;\n  // };\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView();\n    };\n\n    this.scrollToBottomSooth = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.getMessages = () => {\n      fetch('/api/message/getAll').then(results => results.json()).then(info => {\n        const msgData = [];\n        const data = info;\n        data.forEach(element => {\n          const obj = {};\n          obj.msg = element.message;\n          obj.time = element.time;\n          obj.tone = element.tone;\n          obj.sent_from = element.sent_from;\n          msgData.push(obj);\n        });\n        this.setState({\n          msgData,\n          msgLen: msgData.length\n        });\n      });\n    };\n\n    this.setImage = tone => {\n      const imageEmotionMap = {\n        Joy: 'happy.svg',\n        Anger: 'angry.svg',\n        Sadness: 'sad.svg',\n        Fear: 'sad.svg'\n      };\n      if (Object.keys(imageEmotionMap).includes(tone)) return imageEmotionMap[tone];else return 'normal.svg';\n    };\n\n    this.displayMessage = msg => {\n      const activeUser = localStorage.getItem('active_user');\n      console.log(activeUser);\n      return React.createElement(\"div\", {\n        className: \" msg-bubble \".concat(activeUser === msg.sent_from ? 'active-msg' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-name \".concat(activeUser === msg.sent_from ? 'active' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"user-logo\",\n        src: \"\".concat(activeUser === msg.sent_from ? 'user-black.svg' : 'user-red.svg'),\n        alt: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), msg.sent_from), React.createElement(\"div\", {\n        className: \"message \".concat(activeUser === msg.sent_from ? 'active' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, msg.msg), React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.setImage(msg.tone),\n        style: {\n          width: '30px'\n        },\n        alt: \"emogi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, new Date(\"\".concat(msg.time)).toLocaleTimeString(), \" (\", new Date(\"\".concat(msg.time)).toDateString(), \")\"));\n    };\n\n    this.state = {\n      msgData: []\n    };\n  } // eslint-disable-next-line react/no-typos\n\n\n  componentDidMount() {\n    socket.on('get_msg', data => {\n      const msgData = this.state.msgData;\n      const obj = {};\n      obj.msg = data.message;\n      obj.time = data.time;\n      obj.tone = data.tone;\n      obj.sent_from = data.sent_from;\n      msgData.push(obj);\n      this.setState({\n        msgData\n      }, () => {\n        this.scrollToBottomSooth();\n      });\n    });\n    this.getMessages();\n  }\n\n  componentDidUpdate() {\n    if (this.state.msgLen === this.state.msgData.length) this.scrollToBottom();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.msgData ? this.state.msgData.map(msg => this.displayMessage(msg)) : null, React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        clear: \"both\"\n      },\n      ref: el => {\n        this.messagesEnd = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Box;","map":{"version":3,"sources":["/Users/biswasoren/personal_projects/chatApp/src/components/box.js"],"names":["React","socket","Box","Component","constructor","props","scrollToBottom","messagesEnd","scrollIntoView","scrollToBottomSooth","behavior","getMessages","fetch","then","results","json","info","msgData","data","forEach","element","obj","msg","message","time","tone","sent_from","push","setState","msgLen","length","setImage","imageEmotionMap","Joy","Anger","Sadness","Fear","Object","keys","includes","displayMessage","activeUser","localStorage","getItem","console","log","display","width","Date","toLocaleTimeString","toDateString","state","componentDidMount","on","componentDidUpdate","render","map","float","clear","el"],"mappings":"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","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\nimport './box.css'\nimport { socket } from './socket';\n\nclass Box extends React.Component {\n\n  // static propTypes = {\n  //   height: PropTypes.string.isRequired;\n  // };\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n      super(props);\n      this.state = {\n        msgData: [],\n      }\n    }\n  \n    // eslint-disable-next-line react/no-typos\n    componentDidMount() {\n\n    socket.on('get_msg', (data) =>  {\n      const msgData = this.state.msgData;\n      const obj ={};\n      obj.msg = data.message;\n      obj.time = data.time;\n      obj.tone = data.tone;\n      obj.sent_from = data.sent_from;\n      \n      \n      msgData.push(obj);\n\n      this.setState({ \n        msgData,\n      }, () => {\n        this.scrollToBottomSooth();\n      });\n    });  \n    \n    this.getMessages();\n    }\n\n    componentDidUpdate() {\n      if (this.state.msgLen === this.state.msgData.length)\n        this.scrollToBottom();\n    }\n\n    scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView()\n    }\n\n    scrollToBottomSooth = () => {\n      this.messagesEnd.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    getMessages = () => {\n        fetch('/api/message/getAll')\n        .then(results => results.json())\n        .then(info => {\n          const msgData = [];\n            const data = info;\n            data.forEach(element => {\n              const obj ={};\n              obj.msg = element.message;\n              obj.time = element.time;\n              obj.tone = element.tone;\n              obj.sent_from = element.sent_from;\n              msgData.push(obj);\n            });\n            this.setState({ \n              msgData,\n              msgLen: msgData.length\n\n            });\n        });\n    }\n\n    setImage = (tone) => {\n      const imageEmotionMap = {\n        Joy: 'happy.svg',\n        Anger: 'angry.svg',\n        Sadness: 'sad.svg',\n        Fear: 'sad.svg'\n      }\n      if (Object.keys(imageEmotionMap).includes(tone))\n        return imageEmotionMap[tone];\n      else \n        return 'normal.svg'\n    }\n\n    displayMessage = msg => {\n      const activeUser = localStorage.getItem('active_user')\n      console.log(activeUser)\n      return (\n      <div className={` msg-bubble ${activeUser === msg.sent_from ? 'active-msg' : ''}`}>\n          <div className={`user-name ${activeUser === msg.sent_from ? 'active' : ''}`}> \n            <img className=\"user-logo\" src={`${activeUser === msg.sent_from ? 'user-black.svg' : 'user-red.svg'}`} alt=\"select\"/>\n              {msg.sent_from}\n            </div>\n          <div className={`message ${activeUser === msg.sent_from ? 'active' : ''}`}>\n          <div className=\"msg\">{msg.msg}</div>\n          <div style={{display: 'flex'}}><img src={this.setImage(msg.tone)} style={{width: '30px'}} alt='emogi'/></div>\n          </div>\n          <div className=\"time\">{new Date(`${msg.time}`).toLocaleTimeString() } ({new Date(`${msg.time}`).toDateString()})</div>\n        </div>\n        );\n    }\n  \n    render() {\n      return (\n        <div className=\"chat-container\">\n        {this.state.msgData ? this.state.msgData.map(msg => \n          this.displayMessage(msg)\n          ): null}\n          <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n        </div>\n        </div>\n      );\n    }\n  }\n\n  export default (Box);"]},"metadata":{},"sourceType":"module"}