{"map":"{\"version\":3,\"sources\":[\"/Users/biswasoren/personal_projects/chatApp/src/components/socket.js\",\"/Users/biswasoren/personal_projects/chatApp/src/components/box.js\",\"/Users/biswasoren/personal_projects/chatApp/src/components/send.js\",\"/Users/biswasoren/personal_projects/chatApp/src/components/chatBox.js\",\"/Users/biswasoren/personal_projects/chatApp/src/components/login.js\",\"/Users/biswasoren/personal_projects/chatApp/src/components/register.js\",\"/Users/biswasoren/personal_projects/chatApp/src/components/container.js\",\"/Users/biswasoren/personal_projects/chatApp/src/App.js\",\"/Users/biswasoren/personal_projects/chatApp/src/serviceWorker.js\",\"/Users/biswasoren/personal_projects/chatApp/src/index.js\"],\"names\":[\"socket\",\"socketIOClient\",\"Box\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"scrollToBottom\",\"messagesEnd\",\"scrollIntoView\",\"scrollToBottomSooth\",\"behavior\",\"getMessages\",\"fetch\",\"then\",\"results\",\"json\",\"info\",\"msgData\",\"forEach\",\"element\",\"obj\",\"msg\",\"message\",\"time\",\"tone\",\"sent_from\",\"push\",\"setState\",\"msgLen\",\"length\",\"setImage\",\"imageEmotionMap\",\"Joy\",\"Anger\",\"Sadness\",\"Fear\",\"keys\",\"includes\",\"displayMessage\",\"activeUser\",\"localStorage\",\"getItem\",\"console\",\"log\",\"react_default\",\"a\",\"createElement\",\"className\",\"concat\",\"src\",\"alt\",\"style\",\"display\",\"width\",\"Date\",\"toLocaleTimeString\",\"toDateString\",\"state\",\"_this2\",\"on\",\"data\",\"_this3\",\"map\",\"float\",\"clear\",\"ref\",\"el\",\"React\",\"Component\",\"Send\",\"sendMsg\",\"target\",\"document\",\"getElementById\",\"value\",\"emit\",\"user\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"id\",\"placeholder\",\"Button\",\"animated\",\"onClick\",\"Content\",\"visible\",\"hidden\",\"Icon\",\"name\",\"ChatBox\",\"users\",\"height\",\"margin\",\"components_box\",\"fontWeight\",\"textAlign\",\"padding\",\"components_send\",\"Login\",\"login\",\"userName\",\"password\",\"usrData\",\"setItem\",\"updateState\",\"chat\",\"register\",\"alert\",\"Input\",\"type\",\"primary\",\"secondary\",\"Register\",\"Container\",\"switch\",\"components_login\",\"components_chatBox\",\"App\",\"container\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import socketIOClient from \\\"socket.io-client\\\";\\n\\nconst socket = socketIOClient('http://localhost:4000');\\n// const socket = socketIOClient('https://tone-analysing-chat.herokuapp.com');\\n\\n\\nexport {\\n    socket\\n}\",\"import React from 'react';\\n// import PropTypes from 'prop-types';\\nimport './box.css'\\nimport { socket } from './socket';\\n\\nclass Box extends React.Component {\\n\\n  // static propTypes = {\\n  //   height: PropTypes.string.isRequired;\\n  // };\\n    // eslint-disable-next-line no-useless-constructor\\n    constructor(props) {\\n      super(props);\\n      this.state = {\\n        msgData: [],\\n      }\\n    }\\n  \\n    // eslint-disable-next-line react/no-typos\\n    componentDidMount() {\\n\\n    socket.on('get_msg', (data) =>  {\\n      const msgData = this.state.msgData;\\n      const obj ={};\\n      obj.msg = data.message;\\n      obj.time = data.time;\\n      obj.tone = data.tone;\\n      obj.sent_from = data.sent_from;\\n      \\n      \\n      msgData.push(obj);\\n\\n      this.setState({ \\n        msgData,\\n      }, () => {\\n        this.scrollToBottomSooth();\\n      });\\n    });  \\n    \\n    this.getMessages();\\n    }\\n\\n    componentDidUpdate() {\\n      if (this.state.msgLen === this.state.msgData.length)\\n        this.scrollToBottom();\\n    }\\n\\n    scrollToBottom = () => {\\n      this.messagesEnd.scrollIntoView()\\n    }\\n\\n    scrollToBottomSooth = () => {\\n      this.messagesEnd.scrollIntoView({ behavior: \\\"smooth\\\" })\\n    }\\n\\n    getMessages = () => {\\n        fetch('/api/message/getAll')\\n        .then(results => results.json())\\n        .then(info => {\\n          const msgData = [];\\n            const data = info;\\n            data.forEach(element => {\\n              const obj ={};\\n              obj.msg = element.message;\\n              obj.time = element.time;\\n              obj.tone = element.tone;\\n              obj.sent_from = element.sent_from;\\n              msgData.push(obj);\\n            });\\n            this.setState({ \\n              msgData,\\n              msgLen: msgData.length\\n\\n            });\\n        });\\n    }\\n\\n    setImage = (tone) => {\\n      const imageEmotionMap = {\\n        Joy: 'happy.svg',\\n        Anger: 'angry.svg',\\n        Sadness: 'sad.svg',\\n        Fear: 'sad.svg'\\n      }\\n      if (Object.keys(imageEmotionMap).includes(tone))\\n        return imageEmotionMap[tone];\\n      else \\n        return 'normal.svg'\\n    }\\n\\n    displayMessage = msg => {\\n      const activeUser = localStorage.getItem('active_user')\\n      console.log(activeUser)\\n      return (\\n      <div className={` msg-bubble ${activeUser === msg.sent_from ? 'active-msg' : ''}`}>\\n          <div className={`user-name ${activeUser === msg.sent_from ? 'active' : ''}`}> \\n            <img className=\\\"user-logo\\\" src={`${activeUser === msg.sent_from ? 'user-black.svg' : 'user-red.svg'}`} alt=\\\"select\\\"/>\\n              {msg.sent_from}\\n            </div>\\n          <div className={`message ${activeUser === msg.sent_from ? 'active' : ''}`}>\\n          <div className=\\\"msg\\\">{msg.msg}</div>\\n          <div style={{display: 'flex'}}><img src={this.setImage(msg.tone)} style={{width: '30px'}} alt='emogi'/></div>\\n          </div>\\n          <div className=\\\"time\\\">{new Date(`${msg.time}`).toLocaleTimeString() } ({new Date(`${msg.time}`).toDateString()})</div>\\n        </div>\\n        );\\n    }\\n  \\n    render() {\\n      return (\\n        <div className=\\\"chat-container\\\">\\n        {this.state.msgData ? this.state.msgData.map(msg => \\n          this.displayMessage(msg)\\n          ): null}\\n          <div style={{ float:\\\"left\\\", clear: \\\"both\\\" }}\\n             ref={(el) => { this.messagesEnd = el; }}>\\n        </div>\\n        </div>\\n      );\\n    }\\n  }\\n\\n  export default (Box);\",\"import React from 'react';\\n// import PropTypes from 'prop-types';\\nimport './send.css'\\nimport { Button, Icon } from 'semantic-ui-react'\\nimport { socket } from './socket';\\n\\n\\n\\nclass Send extends React.Component {\\n    // eslint-disable-next-line no-useless-constructor\\n    constructor(props) {\\n      super(props);\\n      this.state = {\\n        msgData: [],\\n      }\\n    }\\n    \\n    sendMsg = () => {\\n        const target = document.getElementById('msgBox');\\n        console.log(target.value);\\n        \\n        socket.emit('which_user', null);\\n        socket.on('this_user', user => {\\n          console.log(user);\\n          if (target.value) {\\n            fetch('/api/message/send', {\\n              method: 'post',\\n              headers: {'Content-Type':'application/json'},\\n              body: JSON.stringify({message: target.value, user: user})\\n          });\\n          }\\n        target.value = null;\\n        });\\n    }\\n\\n    render() {\\n      return (\\n        <div className=\\\"inputBox\\\">\\n            <div className=\\\"textBox\\\">\\n            <input id=\\\"msgBox\\\" placeholder='Type Your Message'/>\\n            </div>\\n            <div className=\\\"sendBtn\\\">\\n            <Button animated onClick={() => {this.sendMsg()}}>\\n            <Button.Content visible>Send</Button.Content>\\n            <Button.Content hidden>\\n                <Icon name='arrow right' />\\n            </Button.Content>\\n            </Button>\\n            </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default (Send)\",\"import React from 'react';\\nimport Box from './box'\\nimport Send from './send'\\nimport './chatBox.css';\\nimport { socket } from './socket';\\nimport PropTypes from 'prop-types';\\n\\n\\n\\nclass ChatBox extends React.Component {\\n    // eslint-disable-next-line no-useless-constructor\\n    constructor(props) {\\n      super(props);\\n      this.state = {\\n        msgData: [],\\n        users: [],\\n      }\\n    }\\n\\n    static propTypes = {\\n      updateState: PropTypes.func.isRequired,\\n    };\\n  \\n    // eslint-disable-next-line react/no-typos\\n    componentDidMount() {\\n      socket.on('all_users', (data) =>  {\\n        this.setState({\\n          users: data\\n        })\\n      });  \\n    }\\n\\n    render() {\\n      return (\\n        <div style={{height: '100%'}}>\\n          <div className=\\\"header\\\"></div>\\n          <div className=\\\"conatiner\\\">\\n            <div className=\\\"nav\\\"> </div>\\n        <div style={{width: '90%'}}>\\n        <div style={{ display: 'flex', height: 'calc(100% - 106px)', margin: '22px'}}>\\n          <div className=\\\"message-info\\\">\\n            <div className=\\\"message-header\\\"> Anonomous Group </div>\\n          <div className=\\\"message-card\\\">\\n          <Box />\\n          </div>\\n          </div>\\n        <div className=\\\"list\\\"> \\n          <div style={{margin: '8px 0', fontWeight: '800'}}>Users\\n            </div>\\n            {\\n              this.state.users.length > 0 ? this.state.users.map(user => \\n              <div style={{\\n                textAlign: 'left',\\n                padding: '0 30px'\\n              }}> {user}\\n                </div>)\\n                : null\\n            }\\n            </div>\\n        </div>\\n        <Send/>\\n        </div>\\n        </div>\\n        </div>\\n      );\\n    }\\n  }\\n\\n  export default (ChatBox);\",\"import React from 'react';\\nimport './login.css';\\nimport { Button } from 'semantic-ui-react';\\nimport { Input } from 'semantic-ui-react';\\nimport { socket } from './socket';\\nimport PropTypes from 'prop-types';\\n\\n\\nclass Login extends React.Component {\\n    // eslint-disable-next-line no-useless-constructor\\n    constructor(props) {\\n      super(props);\\n      this.state = {\\n        msgData: [],\\n      }\\n    }\\n\\n    static propTypes = {\\n      updateState: PropTypes.func.isRequired,\\n    };\\n  \\n    // eslint-disable-next-line react/no-typos\\n    componentDidMount() {}\\n\\n    login = () => {\\n      const userName = document.getElementById('userName');\\n      const password = document.getElementById('password');\\n        fetch('/api/register/login', {\\n            method: 'post',\\n            headers: {'Content-Type':'application/json'},\\n            body: JSON.stringify({ \\n              userName: userName.value })\\n        }).then(results => results.json())\\n        .then(info => {\\n          const usrData = info;\\n            if (usrData.length !== 0) {\\n            if (usrData[0].password === password.value) {\\n              socket.emit('add_user', userName.value);\\n              localStorage.setItem('active_user', userName.value);\\n              userName.value = null;\\n              password.value = null;\\n              this.props.updateState({\\n                login : 'none',\\n                chat : 'block',\\n                register: 'none'\\n              });\\n              \\n            }\\n            else {\\n              alert('Paswword is incorrect');\\n            }\\n          }\\n          else {\\n            alert('User not found');\\n          }\\n\\n            \\n        });\\n       \\n    }\\n\\n    render() {\\n      return (\\n        <div className=\\\"card\\\">\\n        <div className=\\\"form\\\">\\n          <div>\\n            <Input id='userName' placeholder='Enter Username ' />\\n          </div>\\n          <div style={{\\n            margin: '10px 0'\\n          }}>\\n            <Input id='password' placeholder='Password' type='password' />\\n          </div>\\n          <Button primary style={{\\n           margin: '10px 0'\\n           }}\\n           onClick={() => {\\n              this.login()\\n           }}>\\n            Login\\n          </Button>\\n          <div >\\n            New User ?\\n          </div>\\n          <Button secondary style={{\\n            margin: '10px 0'\\n            }}\\n            onClick={() => {\\n              this.props.updateState({\\n                login : 'none',\\n                chat : 'none',\\n                register: 'block'\\n\\n              });\\n            }}>\\n            Sign Up\\n          </Button>\\n          </div>\\n        </div>\\n      );\\n    }\\n  }\\n\\n  export default (Login);\",\"import React from 'react';\\nimport './login.css';\\nimport { Button } from 'semantic-ui-react';\\nimport PropTypes from 'prop-types';\\nimport { Input } from 'semantic-ui-react';\\n\\nclass Register extends React.Component {\\n    // eslint-disable-next-line no-useless-constructor\\n    constructor(props) {\\n      super(props);\\n      this.state = {\\n        msgData: [],\\n      }\\n    }\\n    static propTypes = {\\n      updateState: PropTypes.func.isRequired,\\n    };\\n    // eslint-disable-next-line react/no-typos\\n    componentDidMount() {}\\n    register = () => {\\n      const userName = document.getElementById('userNameRgstr');\\n      const password = document.getElementById('passwordRgstr');\\n        fetch('/api/register/add', {\\n            method: 'post',\\n            headers: {'Content-Type':'application/json'},\\n            body: JSON.stringify({ \\n              userName: userName.value,\\n              password: password.value })\\n        }).then(() => {\\n          this.props.updateState({\\n            login : 'block',\\n            chat : 'none',\\n            register: 'none'\\n          });\\n        });\\n        userName.value = null;\\n        password.value = null;\\n    }\\n    render() {\\n      return (\\n        <div className=\\\"card\\\">\\n        <div className=\\\"form\\\">\\n          <div>\\n            <Input id='userNameRgstr' placeholder='Enter Username ' />\\n          </div>\\n          <div style={{\\n            margin: '10px 0'\\n          }}>\\n            <Input id='passwordRgstr' placeholder='Password'/>\\n          </div>\\n          <Button primary style={{\\n           margin: '10px 0'\\n           }}\\n           onClick={() => {\\n             this.register();\\n           }}>\\n            Register\\n          </Button>\\n          \\n          </div>\\n        </div>\\n      );\\n    }\\n  }\\n\\n  export default (Register);\",\"import React from 'react';\\nimport ChatBox from './chatBox'\\nimport Login from './login'\\nimport Register from './register'\\nimport './chatBox.css';\\n\\n\\n\\nclass Container extends React.Component {\\n    // eslint-disable-next-line no-useless-constructor\\n    constructor(props) {\\n      super(props);\\n      this.state = {\\n          switch: {\\n            register: 'none',\\n            login: 'block',\\n            chat: 'none'\\n        }\\n      }\\n    }\\n  \\n    // eslint-disable-next-line react/no-typos\\n    componentDidMount() {}  \\n    \\n    updateState= (state) => {\\n        this.setState({\\n            switch: state,\\n        });\\n    }\\n\\n    render() {\\n      return (\\n        <div>\\n        <div style={{ display: this.state.switch.login}}>\\n        <Login updateState={this.updateState}/>\\n        </div>\\n       \\n        <div style={{ display: this.state.switch.chat, height: '100vh'}}>\\n        <ChatBox updateState={this.updateState}/>\\n        </div>\\n        \\n        <div style={{ display: this.state.switch.register}}>\\n        <Register updateState={this.updateState}/>\\n        </div>\\n        \\n        </div>\\n      );\\n    }\\n  }\\n\\n  export default (Container);\",\"import React from 'react';\\nimport './App.css';\\nimport'semantic-ui-css/semantic.min.css';\\nimport Container from './components/container'\\n\\nfunction App() {\\n  return (\\n      <div className=\\\"App\\\">\\n          <Container />\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{140:function(e,t,a){},141:function(e,t,a){},158:function(e,t,a){e.exports=a(312)},163:function(e,t,a){},164:function(e,t,a){},166:function(e,t,a){},189:function(e,t){},192:function(e,t,a){},312:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),r=a(30),o=a.n(r),c=(a(163),a(164),a(165),a(17)),i=a(18),l=a(21),m=a(19),u=a(22),d=(a(166),a(142)),g=a.n(d)()(\"http://localhost:4000\"),h=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).scrollToBottom=function(){a.messagesEnd.scrollIntoView()},a.scrollToBottomSooth=function(){a.messagesEnd.scrollIntoView({behavior:\"smooth\"})},a.getMessages=function(){fetch(\"/api/message/getAll\").then(function(e){return e.json()}).then(function(e){var t=[];e.forEach(function(e){var a={};a.msg=e.message,a.time=e.time,a.tone=e.tone,a.sent_from=e.sent_from,t.push(a)}),a.setState({msgData:t,msgLen:t.length})})},a.setImage=function(e){var t={Joy:\"happy.svg\",Anger:\"angry.svg\",Sadness:\"sad.svg\",Fear:\"sad.svg\"};return Object.keys(t).includes(e)?t[e]:\"normal.svg\"},a.displayMessage=function(e){var t=localStorage.getItem(\"active_user\");return console.log(t),s.a.createElement(\"div\",{className:\" msg-bubble \".concat(t===e.sent_from?\"active-msg\":\"\")},s.a.createElement(\"div\",{className:\"user-name \".concat(t===e.sent_from?\"active\":\"\")},s.a.createElement(\"img\",{className:\"user-logo\",src:\"\".concat(t===e.sent_from?\"user-black.svg\":\"user-red.svg\"),alt:\"select\"}),e.sent_from),s.a.createElement(\"div\",{className:\"message \".concat(t===e.sent_from?\"active\":\"\")},s.a.createElement(\"div\",{className:\"msg\"},e.msg),s.a.createElement(\"div\",{style:{display:\"flex\"}},s.a.createElement(\"img\",{src:a.setImage(e.tone),style:{width:\"30px\"},alt:\"emogi\"}))),s.a.createElement(\"div\",{className:\"time\"},new Date(\"\".concat(e.time)).toLocaleTimeString(),\" (\",new Date(\"\".concat(e.time)).toDateString(),\")\"))},a.state={msgData:[]},a}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;g.on(\"get_msg\",function(t){var a=e.state.msgData,n={};n.msg=t.message,n.time=t.time,n.tone=t.tone,n.sent_from=t.sent_from,a.push(n),e.setState({msgData:a},function(){e.scrollToBottomSooth()})}),this.getMessages()}},{key:\"componentDidUpdate\",value:function(){this.state.msgLen===this.state.msgData.length&&this.scrollToBottom()}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"chat-container\"},this.state.msgData?this.state.msgData.map(function(t){return e.displayMessage(t)}):null,s.a.createElement(\"div\",{style:{float:\"left\",clear:\"both\"},ref:function(t){e.messagesEnd=t}}))}}]),t}(s.a.Component),v=(a(192),a(313)),p=a(31),f=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).sendMsg=function(){var e=document.getElementById(\"msgBox\");console.log(e.value),g.emit(\"which_user\",null),g.on(\"this_user\",function(t){console.log(t),e.value&&fetch(\"/api/message/send\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({message:e.value,user:t})}),e.value=null})},a.state={msgData:[]},a}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"inputBox\"},s.a.createElement(\"div\",{className:\"textBox\"},s.a.createElement(\"input\",{id:\"msgBox\",placeholder:\"Type Your Message\"})),s.a.createElement(\"div\",{className:\"sendBtn\"},s.a.createElement(v.a,{animated:!0,onClick:function(){e.sendMsg()}},s.a.createElement(v.a.Content,{visible:!0},\"Send\"),s.a.createElement(v.a.Content,{hidden:!0},s.a.createElement(p.a,{name:\"arrow right\"})))))}}]),t}(s.a.Component),E=(a(140),function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).state={msgData:[],users:[]},a}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;g.on(\"all_users\",function(t){e.setState({users:t})})}},{key:\"render\",value:function(){return s.a.createElement(\"div\",{style:{height:\"100%\"}},s.a.createElement(\"div\",{className:\"header\"}),s.a.createElement(\"div\",{className:\"conatiner\"},s.a.createElement(\"div\",{className:\"nav\"},\" \"),s.a.createElement(\"div\",{style:{width:\"90%\"}},s.a.createElement(\"div\",{style:{display:\"flex\",height:\"calc(100% - 106px)\",margin:\"22px\"}},s.a.createElement(\"div\",{className:\"message-info\"},s.a.createElement(\"div\",{className:\"message-header\"},\" Anonomous Group \"),s.a.createElement(\"div\",{className:\"message-card\"},s.a.createElement(h,null))),s.a.createElement(\"div\",{className:\"list\"},s.a.createElement(\"div\",{style:{margin:\"8px 0\",fontWeight:\"800\"}},\"Users\"),this.state.users.length>0?this.state.users.map(function(e){return s.a.createElement(\"div\",{style:{textAlign:\"left\",padding:\"0 30px\"}},\" \",e)}):null)),s.a.createElement(f,null))))}}]),t}(s.a.Component)),y=(a(141),a(319)),b=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).login=function(){var e=document.getElementById(\"userName\"),t=document.getElementById(\"password\");fetch(\"/api/register/login\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({userName:e.value})}).then(function(e){return e.json()}).then(function(n){var s=n;0!==s.length?s[0].password===t.value?(g.emit(\"add_user\",e.value),localStorage.setItem(\"active_user\",e.value),e.value=null,t.value=null,a.props.updateState({login:\"none\",chat:\"block\",register:\"none\"})):alert(\"Paswword is incorrect\"):alert(\"User not found\")})},a.state={msgData:[]},a}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"card\"},s.a.createElement(\"div\",{className:\"form\"},s.a.createElement(\"div\",null,s.a.createElement(y.a,{id:\"userName\",placeholder:\"Enter Username \"})),s.a.createElement(\"div\",{style:{margin:\"10px 0\"}},s.a.createElement(y.a,{id:\"password\",placeholder:\"Password\",type:\"password\"})),s.a.createElement(v.a,{primary:!0,style:{margin:\"10px 0\"},onClick:function(){e.login()}},\"Login\"),s.a.createElement(\"div\",null,\"New User ?\"),s.a.createElement(v.a,{secondary:!0,style:{margin:\"10px 0\"},onClick:function(){e.props.updateState({login:\"none\",chat:\"none\",register:\"block\"})}},\"Sign Up\")))}}]),t}(s.a.Component),w=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).register=function(){var e=document.getElementById(\"userNameRgstr\"),t=document.getElementById(\"passwordRgstr\");fetch(\"/api/register/add\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({userName:e.value,password:t.value})}).then(function(){a.props.updateState({login:\"block\",chat:\"none\",register:\"none\"})}),e.value=null,t.value=null},a.state={msgData:[]},a}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"card\"},s.a.createElement(\"div\",{className:\"form\"},s.a.createElement(\"div\",null,s.a.createElement(y.a,{id:\"userNameRgstr\",placeholder:\"Enter Username \"})),s.a.createElement(\"div\",{style:{margin:\"10px 0\"}},s.a.createElement(y.a,{id:\"passwordRgstr\",placeholder:\"Password\"})),s.a.createElement(v.a,{primary:!0,style:{margin:\"10px 0\"},onClick:function(){e.register()}},\"Register\")))}}]),t}(s.a.Component),j=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).updateState=function(e){a.setState({switch:e})},a.state={switch:{register:\"none\",login:\"block\",chat:\"none\"}},a}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"render\",value:function(){return s.a.createElement(\"div\",null,s.a.createElement(\"div\",{style:{display:this.state.switch.login}},s.a.createElement(b,{updateState:this.updateState})),s.a.createElement(\"div\",{style:{display:this.state.switch.chat,height:\"100vh\"}},s.a.createElement(E,{updateState:this.updateState})),s.a.createElement(\"div\",{style:{display:this.state.switch.register}},s.a.createElement(w,{updateState:this.updateState})))}}]),t}(s.a.Component);var O=function(){return s.a.createElement(\"div\",{className:\"App\"},s.a.createElement(j,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(s.a.createElement(O,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[158,1,2]]]);","extractedComments":[]}